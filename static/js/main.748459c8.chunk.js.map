{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","RegExp","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","isValidUrl","setIsValidUrl","hasError","htmlFor","type","classNames","e","url","target","test","onBlur","NewMovie","onAdd","count","setCount","setMovie","handleDisable","trim","handleInputs","event","prev","onClick","disabled","App","moviesFromServer","initialMovies","setInitialMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"2uEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECC7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,8BCNrCC,EAAU,IAAIC,OAClB,mLAoBK,IAAMC,EAA6B,SAAC,GAOpC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,MAKI,IAJJC,aAII,MAJIF,EAIJ,MAHJG,mBAGI,sBAHmBD,GAGnB,MAFJE,gBAEI,SADJC,EACI,EADJA,SAGA,EAAaC,oBAAS,2BAASN,EAAT,YAdfO,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAYa,IAAfC,EAAP,oBAGA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAoCP,oBAAS,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACMC,EAAWJ,GAAWR,IAAaH,EAYzC,OACE,sBAAKhB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgC,QAASN,EAAlC,SACGT,IAGH,qBAAKjB,UAAU,UAAf,SACE,uBACEe,KAAMA,EACNkB,KAAK,OACLP,GAAIA,EACJ,0BAAkBX,GAClBf,UAAWkC,IAAW,QAAS,CAC7B,YAAaH,IAEfb,YAAaA,EACbF,MAAOA,EACPI,SA3Be,SAACe,GAClBf,GACFA,EAASe,GAGX,IAAMC,EAAMD,EAAEE,OAAOrB,MAErBc,EAAclB,EAAQ0B,KAAKF,GAC5B,EAoBOG,OAAQ,kBAAMX,GAAW,EAAjB,MAIXG,GACC,mBAAG/B,UAAU,iBAAb,mBAAkCiB,EAAlC,mBAEAY,GACA,mBAAG7B,UAAU,iBAAb,2BAIP,ECxEYwC,EAA4B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAC1C,EAA0BpB,mBAAS,GAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KACA,EAA0BtB,mBAAS,CACjCjB,MAAO,GACPF,OAAQ,GACRK,QAAS,GACTI,OAAQ,GACRN,YAAa,KALf,mBAAON,EAAP,KAAc6C,EAAd,KAQMC,GAAiB9C,EAAMK,MAAM0C,SAC/B/C,EAAMG,OAAO4C,SACb/C,EAAMQ,QAAQuC,SACd/C,EAAMY,OAAOmC,OAEXC,EAAe,SAACC,GACpBJ,GAAS,SAACK,GAAD,mBAAC,eACHA,GADE,kBACKD,EAAMX,OAAOtB,KAAOiC,EAAMX,OAAOrB,OADtC,GAGV,EAkBD,OACE,uBAAMhB,UAAU,WAAhB,UACE,oBAAIA,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEe,KAAK,QACLE,MAAM,QACND,MAAOjB,EAAMK,MACbgB,SAAU2B,EACV5B,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,cACLE,MAAM,cACND,MAAOjB,EAAMM,YACbe,SAAU2B,IAGZ,cAAC,EAAD,CACEhC,KAAK,SACLE,MAAM,YACND,MAAOjB,EAAMG,OACbkB,SAAU2B,EACV5B,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,UACLE,MAAM,WACND,MAAOjB,EAAMQ,QACba,SAAU2B,EACV5B,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,SACLE,MAAM,UACND,MAAOjB,EAAMY,OACbS,SAAU2B,EACV5B,UAAQ,IAGV,qBAAKnB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACL,UAAQ,gBACRjC,UAAU,iBACVkD,QAvDW,WACnBP,EAASD,EAAQ,GAVjBE,EAAS,CACPxC,MAAO,GACPF,OAAQ,GACRK,QAAS,GACTI,OAAQ,GACRN,YAAa,KAOfoC,EAAM1C,EACP,EAoDSoD,SAAUN,EALZ,uBA5C0BH,EAyDnC,E,QChGYU,EAAM,WACjB,MAA0C/B,mBAASgC,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAMA,OACE,sBAAKvD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQ6C,MAEtB,qBAAKtD,UAAU,UAAf,SACE,cAAC,EAAD,CACEyC,MAXW,SAAC1C,GAClBwD,GAAiB,SAACC,GAAD,4BAAoBA,GAApB,CAAgCzD,GAAhC,GAClB,QAcF,ECtBD0D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.748459c8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\nconst pattern = new RegExp(\n  '^(([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+|'\n  + '(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)'\n  + '((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@,.\\\\w_]*)#?(?:[,.!/\\\\\\\\\\\\w]*))?)$',\n);\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const [isValidUrl, setIsValidUrl] = useState(true);\n  const hasError = touched && required && !value;\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    const url = e.target.value;\n\n    setIsValidUrl(pattern.test(url));\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleOnChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {!isValidUrl && (\n        <p className=\"help is-danger\">Invalid URL</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd } : Props) => {\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState({\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    description: '',\n  });\n\n  const handleDisable = !movie.title.trim()\n  || !movie.imgUrl.trim()\n  || !movie.imdbUrl.trim()\n  || !movie.imdbId.trim();\n\n  const handleInputs = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMovie((prev) => (\n      { ...prev, [event.target.name]: event.target.value }\n    ));\n  };\n\n  const reset = () => {\n    setMovie({\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      description: '',\n    });\n  };\n\n  const handleSubmit = () => {\n    setCount(count + 1);\n    reset();\n    onAdd(movie);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={handleInputs}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={handleInputs}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={handleInputs}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={handleInputs}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={handleInputs}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleSubmit}\n            disabled={handleDisable}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [initialMovies, setInitialMovies] = useState(moviesFromServer);\n\n  const onMovieAdd = (movie: Movie) => {\n    setInitialMovies((prevMovies) => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={initialMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={onMovieAdd}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}